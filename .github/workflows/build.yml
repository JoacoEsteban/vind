name: vind-release
on:
  push:
    tags:
      - 'v*.*.*'
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: oven-sh/setup-bun@v2
      - uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false
      - name: Install dependencies
        run: pnpm install
      - name: Bundle all targets
        run: bun run bundle:all
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: build/

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: oven-sh/setup-bun@v2
      - uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: ./build
      - name: Install dependencies for tests
        run: pnpm install
      - name: Install Playwright Browsers
        run: bun x playwright install --with-deps chromium
      - name: Run Playwright tests
        run: bun run test --reporter=html
      - name: Upload test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  release:
    needs: test
    if: startsWith(github.ref, 'refs/tags/v') && !github.event.act
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: ./build
      - name: Zip build artifacts
        run: |
          zip build.zip build/*.zip
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            build/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload zipped build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-zip
          path: build.zip

  publish-chrome:
    runs-on: ubuntu-latest
    needs: release
    if: needs.release.result == 'success'
    steps:
      - uses: oven-sh/setup-bun@v2
      - uses: actions/download-artifact@v4
        with:
          name: build-zip
      - run: unzip build.zip
      - name: Upload and Publish to Chrome Web Store
        run: bunx chrome-webstore-upload-cli@3 --source build/chrome-mv3-prod.zip
        env:
          EXTENSION_ID: ${{ secrets.EXTENSION_ID }}
          CLIENT_ID: ${{ secrets.CHROME_WEB_STORE_CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CHROME_WEB_STORE_CLIENT_SECRET }}
          REFRESH_TOKEN: ${{ secrets.CHROME_WEB_STORE_REFRESH_TOKEN }}

  publish-firefox:
    runs-on: ubuntu-latest
    needs: release
    if: needs.release.result == 'success'
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
      - uses: actions/download-artifact@v4
        with:
          name: build-zip
      - run: unzip build.zip
      - run: unzip build/firefox-mv2-prod.zip -d build/extension
      - run: git archive --output build/source.zip HEAD ":!test" ":!.github"
      - name: Upload and Publish to Firefox Web Store
        run: bunx web-ext@8 sign --channel listed --upload-source-code ../source.zip
        working-directory: build/extension
        env:
          WEB_EXT_API_KEY: ${{ secrets.WEB_EXT_API_KEY }}
          WEB_EXT_API_SECRET: ${{ secrets.WEB_EXT_API_SECRET }}
